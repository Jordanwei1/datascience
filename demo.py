
"""
背更多单词
做更多填空
做更多fib
做更多阅读
做更多rs
做更多听力
做更多ra
做更多di
做更多图表写作
做更多议论文写作
做更多数学
做更多cfa
做更多模拟web3区块链、比特币投资-胜率积累足够，再实际
做更多sql
做更多excel画表
做更多ppt
做更多复盘
做更多种子用户--用户积累足够，再开发
做更多前端开发
做更多后端开发
做更多数据库
做更多小程序
做更多ios
做更多bi
做更多产品prd
做更多用户
做更多付费用户
做更多产品prd
做更多高付费用户
做更多真题

cursor web3量化投资、微信小程序、pc插件、ios

新版ai获客系统已上线
支持：
自动创建任务
自动捕捉意向用户
自动匹配意向客户
实时监测对标账号
自动跟客户建立联系


首先，对于"算法推荐技术"的范围，《规定》从算法适用的功能场景及所应用的技术类型出发，明确了其包含应用生成合成类、个性化推送类、排序精选类、检索过滤类、调度决策类等算法技术：

生成合成类算法：我们理解，该类算法基于深度学习技术拟合一种概率分布，从而合成或生成文本、语音、图像等文件，如利用大数据、人工智能等技术自动合成新闻、博文、帖子、评论等信息。该类算法技术同样可能适用于AI换脸APP涉及的"深度伪造"与"深度合成"等场景。

个性化推送类算法：我们理解，该类算法通过人工智能分析和过滤机制对海量数据进行深度分析，可以实现信息内容与用户的精准匹配，例如线上购物软件通常可应用该算法，基于用户喜好为其推荐可能喜欢、感兴趣的商品。

排序精选类算法：该类算法可以将一串资料依照特定方式排序，例如搜索引擎对搜索结果进行排序展示。

检索过滤类算法：该类算法可以基于用户需求或法律要求，从可行的决策（推荐）方案中过滤出合适的推荐结果，例如可用于自动识别敏感字词。

调度决策类算法：该类算法可以在资源有限但有多个进程同时发出请求的情况下，决定合适资源使用者，如作业调度算法、进程调度算法等。典型场景如网约车平台调度算法向乘客附近的网约车司机派单，并为司机与乘客提供信息撮合服务。

首先，对于"算法推荐技术"的范围，《规定》从算法适用的功能场景及所应用的技术类型出发，明确了其包含应用生成合成类、个性化推送类、排序精选类、检索过滤类、调度决策类等算法技术：

生成合成类算法：我们理解，该类算法基于深度学习技术拟合一种概率分布，从而合成或生成文本、语音、图像等文件，如利用大数据、人工智能等技术自动合成新闻、博文、帖子、评论等信息。该类算法技术同样可能适用于AI换脸APP涉及的"深度伪造"与"深度合成"等场景。

个性化推送类算法：我们理解，该类算法通过人工智能分析和过滤机制对海量数据进行深度分析，可以实现信息内容与用户的精准匹配，例如线上购物软件通常可应用该算法，基于用户喜好为其推荐可能喜欢、感兴趣的商品。

排序精选类算法：该类算法可以将一串资料依照特定方式排序，例如搜索引擎对搜索结果进行排序展示。

检索过滤类算法：该类算法可以基于用户需求或法律要求，从可行的决策（推荐）方案中过滤出合适的推荐结果，例如可用于自动识别敏感字词。

调度决策类算法：该类算法可以在资源有限但有多个进程同时发出请求的情况下，决定合适资源使用者，如作业调度算法、进程调度算法等。典型场景如网约车平台调度算法向乘客附近的网约车司机派单，并为司机与乘客提供信息撮合服务。

设计一个通知系统
设计一个支付系统
设计一个网络购物秒杀系统
设计一个网络购买票务系统
设计一个银行atm系统
设计一个crm管理系统
设计一个双色球开奖系统
设计一个程序化广告系统
设计一个类似盈透证券交易平台系统/web3
设计一个类似量化基金自动化交易系统/web3
设计一个类似 Tinder 的交友应用程序
设计一个类似 Booking 的酒店预订系统
设计一个类型 Netflix 一样的视频流媒体服务在线视频
设计一个类似 Uber 的拼车服务
设计一个类似 shopify 的在线在线音乐
设计一个类似 Facebook 的新闻订阅系统
设计一个类似 Twitter 的社交网络服务社交娱乐
设计一个类似 Instagram 的照片分享服务社交娱乐
设计一个类似 WhatsApp 的即时通讯服务
设计一个类似 Amazon 一样的电子商务网站在线电商
设计一个类似 Notion 的协作编辑服务
设计一个类似 Dropbox 的文件存储服务
设计一个类似 Google 的搜索自动补全系统
设计一个类似 Google 的搜索引擎信息分发
设计一个类似 微软ie浏览器的服务
设计一个类似 lendingclub的金融理财系统
设计一个类似 likedin的招聘网站系统
设计一个类似 google的云盘系统工具
设计一个类似 chatgpt的ai大模型系统
设计一个类似 tiktok的短视频娱乐系统



# 1、网上水上乐园售票：门票100元。成人全票，儿童半票
# 编写python代码，完成下列要求
# 1）需要动态录入需要购买的门票数量
# 2）如果有儿童，输入儿童的数量，并输出需要支付的金额；如果没有则直接输出需要支付的金额


# 需要录入要购买的门票数量
num = int(input("请输入需要购买的门票数量："))  # input输入过来的内容都是字符串

# 准备一个变量存放是否有儿童
# 通过键盘录入是否有儿童
hive_child = input("请问是否有儿童（Y/N）：")

if hive_child == "Y" or hive_child == "y":
    # 如果有儿童 通过键盘输入儿童的数量
    child_num = int(input("请输入儿童的数量："))
    # 计算包括儿童的门票最后需要支付的金额
    amount = child_num * 50 + (num-child_num) * 100
else:
    # 如果没有儿童  直接输入需要支付的金额
    amount = num * 100

print(f"共计消费{amount:.2f}元")





# 循环
"""
周末去游乐场玩，需要购买门票
根据年龄段收费的游乐场：
4 岁以下免费；
4~18 岁收费 30 元；
18 岁（含）以上收费 60 元。
"""

welcome_page = """
-------------------
欢迎来到成都熊猫基地
-------------------
"""

# 循环完成   --》  无限循环   死循环
while True:
    # 先向用户展示欢迎页面
    print(welcome_page)
    # 首先输入用户的年龄
    age = int(input("请输入您的年龄："))
    # 进行年龄区间的判断
    if age >= 18:
        print("收费60")
    elif age >= 4:
        print("收费30")
    else:
        print("免费")
        
    
    # 循环是否可以下班
    off = input("请问是否可以下班（Y/y）：")
    
    # 如果可以下班则停止循环
    if off == "Y" or off == "y":
        print("可以下班了")
        break


- 简单 商场降价促销，买50-100(包含50与100),会给10%优惠，如果购买金额大于100，则会给20%优惠。设计程序，询问价格且给出最终金额。


# 输入消费金额
price = float(input("请输入消费的金额："))

# 对消费金额区间进行判断
if price < 50:
    print(f"没有优惠， 一共需要支付{price:.2f}元")
elif price < 100:
    print(f"打九折， 一共需要支付{price*0.9:.2f}元")
else:
    print(f"打八折， 一共需要支付{price*0.8:.2f}元")
    
    
# 简单 打印出1到100的和（使用for和while）

num = 1
result = 0

while num<=100:
    result += num
    num += 1
print(result)

简单 给学习成绩进行排级，学习成绩>=90分的同学评级为A，60-89分之间的评级为B，60分以下排级为C
# 输入学生成绩
score = float(input("请输入成绩："))

# 进行成绩的区间判断
if score >= 90:
    print("A")
elif score >= 60:
    print("B")
else:
    print("C")

简单 设计一个验证用户密码程序，用户只有三次机会输入错误,如果输入错误,打印出密码错误,并提示还剩余多少次错误机会,如果三次都错了之后,退出程序,并提示限制登录30分钟

# 定义密码
pw = "123456"

# 定义计数器
num = 0

# 循环    循环次数  3次
while num < 3:

    # 用户输入密码
    upw = input("请输入密码：")
    # 验证用户输入的密码
    if upw == pw:
        # 如果用户输入正确
        # 跳出循环
        print("欢迎回来，尊贵的会员")
        break
    # 如果用户输入错误
    else:
        # 打印出密码错误  并提示还剩余多少次错误机会
        # 记录用户错误次数
        print("密码错误")
        print("还有{}次机会".format(2-num))
    
    num += 1
# 如果三次都错误，则提示限制登录30分钟
else:
    print("三次输入错误，限制登录30分钟")
    
# 定义密码
pw = "123456"

# 定义计数器
num = 0

# 循环    循环次数  3次
while num < 3:

    # 用户输入密码
    upw = input("请输入密码：")
    # 验证用户输入的密码
    if upw == pw:
        # 如果用户输入正确
        # 跳出循环
        print("欢迎回来，尊贵的会员")
        break
    # 如果用户输入错误
    else:
        # 打印出密码错误  并提示还剩余多少次错误机会
        # 记录用户错误次数
        print("密码错误")
        print("还有{}次机会".format(2-num))
    
    num += 1
    # 如果三次都错误，则提示限制登录30分钟
    if num == 3:
        print("三次输入错误，限制登录30分钟")

"""
中等
实现一个ATM系统
需要一、需要打印一个好看的欢迎页面
需求二、可以存钱
需求三、可以取钱
需求四、可以查看当前卡上余额
需求五、输入0表示退出
"""

welcome_page = """
-------------------
欢迎来到中国招商银行
-------------------
1.存钱
2.取钱
3.查看余额
0.退出
-------------------
"""

# 定义初始账户
balance = 10000

# 循环为用户提供服务  循环次数  无限次
while True:  
    # 打印欢迎页面
    print(welcome_page)
    # 用户输入需要进行的操作
    user = input("请输入要进行的操作：")
    # 对用户输入进行判断
    if user == "1":
        # 请输入要存入的金额
        amount = int(input("请输入要存入的金额："))
        # 需要一个初始账号
        balance += amount
        print("存入成功")
        
    elif user == "2":
        # 请输入要取出的金额
        amount = int(input("请输入要取出的金额："))
        # 需要一个初始账号
        # 需要判断用户输入的金额是否小于账户余额
        if amount <= balance:
        # 如果账户余额充足，则取出金额
            balance -= amount
            print("取出成功，请收好您的钞票")
        # 否则，提示用户余额不足
        else:
            print("余额不足")
            
    elif user == "3":
        # 打印余额数量
        print(f"当前余额{balance:,}元")
        
    elif user == "0":
        # 如果用户输入的是0，那么退出程序
        print("退出程序")
        break
    else:
        print("输入有误，请重新输入")
    
    



num1 = 123
num1 

## python基础

## 流程控制

1．if

(1)获取一个整数,如果是奇数输出为"奇数",否则赋值输出为"偶数"

(2)获取一个年份,如果是闰年给变量day赋值为29,否则赋值28

(3)掷骰子决定做什么。1：唱首歌，2：跳个舞，3：学狗叫，4：做俯卧撑，5：念绕口令，6：讲冷笑话

(4)百分制成绩转等级制：90分以上--> A，80分~89分--> B，70分~79分--> C，60分~69分--> D，60分以下--> E。输入一个分数，转换为对应的等级

cnt = 0
while cnt<=3:
    numa = int(input('please enter: '))
    if numa%2==0:
        print('偶数')
    else:
        print('奇数')
    cnt+=1 
print(f'共猜{cnt}轮，恭喜{numa}是偶数')





num = int(input("请输入一个整数："))

if num%2 == 0:
    print("偶数")
else:
    print("奇数")

year = int(input("请输入一个年份："))

if (year%4 == 0 and year%100 != 0) or year%400 == 0:
    day = 29
else:
    day = 28
    
print(day)

import random

active_list = ["唱首歌","跳个舞","学狗叫","做俯卧撑","念绕口令","讲冷笑话",]

random.choice(active_list)

score = float(input("请输入一个成绩："))

if score>=90:
    print("A")
elif score >= 80:
    print("B")
elif score >= 70:
    print("C")
elif score >= 60:
    print("D")
else:
    print("E")

2.while

(1)输入非负整数n计算n!

(2)有1020个西瓜，第一天卖掉总数的一半后又多卖出两个，以后每天卖剩下的一半多两个，问几天以后能卖完？

(3)鸡兔同笼共94只脚，35个头，鸡兔个有多少只？

(4)假设真实年龄是18岁让用户输入猜测的年龄。

猜测正确，输出"恭喜，猜对了”，并退出程序猜测错误，输出"再来1次”。

允许用户最多尝试3次，3次都没有猜对，输出"抱歉，您的次数不够了"，然后直接退出程序

n = int(input("请输入一个整数："))

if n == 0:
    print("0的阶乘结果为：1")
else:
    result = 1
    
    num = 1
    
    while num <= n:
        result *= num
        
        num += 1

print(result)

num = 1020
day = 0

while num>0:
    num = num/2 - 2
    day += 1
    
print(day)

x = 1
y = 1

while x<=35:
    y = 35 - x
    if 2*x + 4*y == 94:
        print(x, y, sep="----")
    x += 1



3.for

(1)本金10000元存入银行，年利率是千分之三，每过1年，将本金和利息相加作为新的本金。计算5年后，获得的本金是多少？

(2)猴子吃桃问题： 猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃了一半，又多吃一个，以后每天都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子。求第一天共摘了多少个？

(3)循环录入某学生5门课的成绩并计算平均分，如果某分数录入为负，停止录入并提示录入错误。（使用break）

(4)循环录入多名python课的学生成绩，统计分数大于等于 80分的学生比例(使用continue)

balance = 10000
for i in range(5):
    balance *= 1.003

print(balance)

num = 1
for i in range(9):
    num = (num + 1)*2
print(num)

score_list = []

for i in range(5):
    score = float(input("请输入一个成绩："))
    if score<0:
        print("输入有误")
        break
    score_list.append(score)

    
print(sum(score_list)/len(score_list))

num = 0

for i in range(5):
    score = float(input("请输入一个成绩："))
    
    if score <80:
        continue
    
    num += 1
    
print(num/(i+1))  # {:.2%}





## 列表

(1)将'张三', '李四方', '王五', '赵六久', '田七七'的姓名存储在一个列表中，并将其命名为names。将一些朋友的姓名存储在一个列表中，并将其命名为names。

依次访问该列表中的每个元素，从而将每个朋友的姓名都打印出来

(2)继续使用names列表，但不打印每个朋友的姓名，而为每人打印一条消息。

每条消息都包含相同的问候语，但抬头为相应朋友的姓名。例如：张三，Good moning!

(3)继续使用names列表，讲张三替换成李四方,并统计出李四方出现的次数

(4)判断'王芳','李四方','田七七','赵四','李娟','王兰'几人是否在第一天的列表中，将不在的人名添加到names列表中

(5)将names列表中3个字的名字取出，添加到names2列表中

names = ['张三', '李四方', '王五', '赵六久', '田七七']
for name in names:
    print(name)

names = ['张三', '李四方', '王五', '赵六久', '田七七']
for name in names:
    print(f"welcome, {name}，Good moning!")

names[0] = '李四方'

names.count('李四方')

nm = ['王芳','李四方','田七七','赵四','李娟','王兰']

for name in nm:
    if name in names:
        continue
    
    names.append(name)

names

names2 = []

for name in names:
    if len(name) >= 3:
        names2.append(name)
        
print(names2)



## 字典

有字典 dic = {"k1": "v1", "k2": "v2", "k3": "v3"}，实现以下功能：

(1)输出字典中所有的key

(2)输出字典中所有的value

(3)添加一个键值对"k4","v4",输出添加后的字典 dic

(4)删除字典 dic 中的键值对"k1","v1",并输出删除后的字典 dic

(5)获取字典 dic 中“k2”对应的值

dic = {"k1": "v1", "k2": "v2", "k3": "v3"}

dic.keys()

dic.values()

dic["k4"] = "v4"

dic.pop("k1")

dic["k2"]

## 集合

(1)动态输入5个正整数，对于重复的数字，只保留一个（使用集合的方法）

seta = set()

for i in range(5):
    seta.add(input("请输入一个正整数："))

seta

# 函数def

(1)编写一个名为collatz()的函数,它有一个名为number的参数

如果参数是偶数,那么collatz()就打印出number//2

如果number是奇数,collatz()就打印3*number+1

(2)写函数，传入n个数，返回字典{‘max’:最大值,’min’:最小值}。例如:min_max(2,5,7,8,4) 返回:{‘max’:8,’min’:2}

(3)通过写一个函数，实现replace功能，将指定字符串中指定的旧字符串转换成指定的新字符串

例如: 原字符串: 'how are you? and you?'   旧字符串: 'you'  新字符串:'me'  结果: 'how are me? and me?'

def collatz(number):
    
    if number % 2 == 0:
        print(number//2)
    else:
        print(3*number+1)

collatz(9)

def get_min_max(lst):
    
    dic = {
        "max":max(lst),
        "min":min(lst),
    }
    return dic

get_min_max([1,2,3,4,5,6,7,8])

stra = 'how are you? and you?'

stra = list(stra)

stra[8:11] = "me"

"".join(stra)

stra[16:19] = "me"

stra = "".join(stra)

stra

stra.find("me")

stra[stra.find("me"):stra.find("me")+len("me")]

def my_replace(stra, old, new):
    
    while old in stra:
        # 找到开始和结束的索引编号
        start = stra.find(old)
        end = start + len(old)

        # 通过索引进行切片，然后重新赋值
        stra = list(stra)
        stra[start:end] = new

        # 将替换后的内容重新拼接在一起
        stra = "".join(stra)
    return stra

my_replace('how are you? and you?', "you", "me")

'how are you? and you?'.replace("you", "me")

## 常用内置函数

(1) 打印出列表[-1, 3, 5, 85] 中的最大值和最小值

(2) 编写一个函数，如果输入的数小于0则输出它的绝对值，如果输入的数大于0则四舍五入保留2位小数输出

(3) 利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并追加到一个列表。

(4) '小红，小李，小张，小王，小红'，按逗号对字符串进行分裂

(5) '小红，小李，小张，小王，小红'，用老王替代字符串中的小王

(6) '小红，小李，小张，小王，小红'，统计小红出现的次数

max([-1, 3, 5, 85])

min([-1, 3, 5, 85])

def abs_round(n):
    
    return round(abs(n),2)

abs_round(-9.89785675)

lst = []

for i in range(51):
    if i%3 == 0:
        lst.append(i)
        
print(lst)

'小红，小李，小张，小王，小红'.split("，")

'小红，小李，小张，小王，小红'.replace("小王", "老王")

'小红，小李，小张，小王，小红'.count("小红")

## pymysql模块

(1)连接本地数据库，创建一张名为student的表，包含name、age、score三个字段

(2)插入一条数据，“小红 22 98”

(3)获取student数据的所有数据

import pymysql

con = pymysql.connect(
    user='root',
    password='123456',
    host='localhost',
    database='zhilai',
    port=3306
)

cur = con.cursor()

cur.execute("create table s (name varchar(20), age int, socre int)")

cur.execute("insert into s values('小红', 22, 98)")

cur.execute("commit")
# con.commit()

cur.execute("select * from s")

cur.fetchall()

## IO操作

(1)创建一个10*10的整数随机数组，取值范围为0-100，并存为txt文件，用逗号分开	





## random模块

(1)随机生成一个[0:1)的随机数

(2)猜随机数1-10之间的随机数，共有五次机会，猜小了提示"你猜的小了，往大了猜试试"，猜大了提示"你猜的大了，往小了猜试试"，

猜正确了提示“恭喜你五次之内猜对了”并退出，五次还没有猜中提示“哎，五次之内都没猜对”！

(3)小明和小红一起玩剪刀石头布的游戏，一共进行3次游戏，打印出每一次的游戏情况，例如：第1轮小明：石头 vs 小红：剪刀




"""

# 1、Quantitative analysis
# 筛选器的编程设计思想
# 1。1  输入潜在可交易的金融产品的清单：
# 1。2、根据金融产品清单，利用预留的算法交易策略回测结果。
# 1。3、根据第四阶段的评估结果，结合2+3的步骤结果输出可交易的金融产品清单。

# 2、Risk management
# 资金分配和管理编程设计思想

# 3、Algorithmic trading
# 模拟人工交易重复操作。

# 4、Strategy evaluation
# 线上人工模拟交易平台自我学习。熟练掌握目标产品的交易规则和重点关注数据值。将实际交易的结果，返回给第一阶段的量化分析。

# 5、Window display
# 将实际交易的结果，可视化展示。


# 1、Quantitative analysis
# 筛选器的编程设计思想：参考价值大师平台，仓位在线，同花顺量化mindgo平台因子选股，bigquant平台
# seeking alpha, 晨星网，英为财情平台，天天基金网，韭圈尔
# 美股中房欧收藏
# 非买资源洋买海鲜
# 根据交易产品的数据进行量化分析，对比不同交易策略框架下，在不同时期的回测情况，预测未来交易。
# 1。1输入指标清单：tradingview平台，同花顺mindgo策略平台，finviz平台，东方财富宏观数据，和讯财经数据，gurufocus平台，新浪机构持仓
# 萝卜投研、慧博投研、巨潮资讯

# 策略按照金融理论，有效金融市场和无效金融市场进行区分。
# 策略因风险对冲理论而进行投资组织，坚持单一产品获利，专注的力量。
# 策略就是不同的指标组合在一起，本质就是通过有效的指标筛选投资产品。

# 指标/因子：基于交易统计信息（例如，开盘价和收盘价，最高价和最低价，成交量等）建立的功能，其数值变化分析可以预测市场的未来走势。
# 指标功能的值可以以线，列，点，几何图形等形式显示在图表上。

# 技术类指标：能量指标、压力支撑指标、超买超卖指标、量价指标、趋势指标

# 财务类指标：偿还能力指标、成长能力指标、估值指标、盈利能力指标、营运能力指标，宏观经济指标

# 消息类指标：雪球、

# 1。2 输入不同的指标类型的因子。
# 因子清单：
# 获取财务：资产负债表、现金流量表、净利润表上面的数据
# 获取技术：技术形态的成交行情的走势数据，例如MA, EMA, KDJ, RSI, MACD, BOLL。

# 组合不同的因子，形成一套完整的筛选策略。

# 已证实策略：
# 双均线策略：利用股价和均线进行择时；缺点：滞后性。
# 当短期均线由上向下穿越长期均线时做空，当长期均线由上向下穿越短期均线时做多，

# Dual Thrust策略：定义一个区间，区间的上届和下届分别为支撑和阻力线。
# 上下界的设定是交易策略的核心部分。在计算上下界时共用到：最高价、最低价、收盘价、开盘价四个参数。
# 公式如下：Range = Max(HH-LC,HC-LL)；上限：Open + K1 Range；下限：Open + k2 Range

# R Breaker策略：日内回转交易策略：首先看一下这6个价格与前一日价格之间的关系。
# 反转卖出价和反转买入价
# 根据公式推导，发现这两个价格和前一日最高最低价没有确定的大小关系。
# 观察卖出价和观察买入价。
# 用观察卖出价 - 前一交易日最高价发现，(H+P-L)-H = P - L >0,说明观察卖出价>前一交易日最高价；同理可证，观察买入价<前一交易日最低价。
# 突破买入价和突破卖出价
# 突破买入价>观察卖出价>前一交易日最高价，可以说明突破买入价>>前一交易日最高价。
# 做差后可以发现，突破买入价 - 前一交易日最高价 = 2[(C-L)+(H-L)]/3。
# 用K线形态表示：
# 前一交易日K线越长，下影线越长，突破买入价越高。
# 前一交易日K线越长，上影线越长，突破卖入价越高。

# 菲阿里四价策略：菲阿里四价指的是：昨日高点、昨日低点、昨天收盘、今天开盘四个价格。
# 菲阿里四价上下轨的计算非常简单。昨日高点为上轨，昨日低点为下轨。当价格突破上轨时，买入开仓；当价格突破下轨时，卖出开仓。

# 小市值策略：第一步：确定调仓频率，以每月第一天调仓为例
# 第二步：确定股票池股票数量，这里假设有30支
# 第三步：调仓日当天获取前一个月的历史数据，并按照市值由小到大排序
# 第四步：买入前30支股票

# 布林线均值回归策略：布林带是利用统计学中的均值和标准差联合计算得出的，分为均线，上轨线和下轨线。布林线均值回归策略认为，
# 标的价格在上轨线和下轨线围成的范围内浮动，即使短期内突破上下轨，但长期内仍然会回归到布林带之中。因此，一旦突破上下轨，即形成买卖信号。
#
# 当股价向上突破上界时，为卖出信号，当股价向下突破下界时，为买入信号。
#
# BOLL线的计算公式：
#
# 中轨线 = N日移动平均线
# 上轨线 = 中轨线 + k 标准差
# 下轨线 = 中轨线 - k 标准差

# Alpha对冲策略：alpha对冲策略常采用股指期货做对冲。在股票市场上做多头，在期货市场上做股指期货空头。当股票现货市场亏损时，
# 可以通过期货市场弥补亏损；当期货市场亏损时，可以通过股票现货市场弥补亏损。
# 第一步：制定一个选股策略，构建投资组合，使其同时拥有alpha和beta收益。
# （本策略选取过去一天EV/EBITDA值并选取30只EV/EBITDA值最小且大于零的股票）
# 第二步：做空股指期货，将投资组合的beta抵消，只剩alpha部分。
# 第三步：进行回测。

# 多因子策略：策略设计思路（假设三因子模型是完全有效的）
# 在用三因子模型估算股票预期收益率时，经常会发现并非每只股票都能严格吻合式1，大部分股票都会存在一个alpha截距项。
# 当存在alpha截距项时，说明股票当前价格偏离均衡价格。基于此，可以设计套利策略。
# alpha < 0时，说明股票收益率低于均衡水平，股票价格被低估，应该买入。
# alpha > 0时，说明股票收益率高于均衡水平，股票价格被高估，应该卖出
# 因此，可以获取alpha最小并且小于0的10只的股票买入开仓。
# 第一步：获取股票市值以及账面市值比数据。
# 第二步：将股票按照各个因子进行排序分组，分组方法如上表所示。
# 第三步：依据式2式3，计算SMB、HML因子。
# 第四步：因子回归，计算alpha值。获取alpha最小并且小于0的10只的股票买入开仓。

# 网格交易策略：网格交易法是一种利用行情震荡进行获利的策略。在标的价格不断震荡的过程中，
# 对标的价格绘制网格，在市场价格触碰到某个网格线时进行加减仓操作尽可能获利。
# 网格交易法属于左侧交易的一种。与右侧交易不同，网格交易法并非跟随行情，追涨杀跌，而是逆势而为，在价格下跌时买入，价格上涨时卖出。
# 网格交易主要包括以下几个核心要点：
# - 挑选的标的最好是价格变化较大，交易较为活跃
# 网格交易是基于行情震荡进行获利的策略，如果标的不活跃，价格波动不大，很难触发交易。
# - 选出网格的压力位和阻力位
# 确定适当的压力位和阻力位，使价格大部分时间能够在压力位和阻力位之间波动。如果压力位和阻力位设置范围过大，会导致难以触发交易；
# 如果压力位和阻力位设置范围过小，则会频繁触发交易。
# - 设置网格的宽度和数量
# 设定多少个网格以及网格的宽度可根据投资者自身喜好自行确定。
# 思路：第一步：确定价格中枢、压力位和阻力位
# 第二步：确定网格的数量和间隔
# 第三步：当价格触碰到网格线时，若高于买入价，则每上升一格卖出m手；若低于买入价，则每下跌一格买入m手。

# 指数增强策略：被动型投资是指完全复制指数，跟随指数的投资方式。例如sp500

# 跨品种、市场、期限套利：在不同的且具有相关性的交易产品上进行方向相反的操作。

# 日内回转交易策略：日内回转交易，顾名思义就是在一天内完成“买”和“卖”两个相反方向的操作（可一次也可多次），也就是“T+0”交易。
# 第一步：设置变量
# context.first:底仓配置信号，0表示未配置底仓；1表示配置底仓。
# context.trade_n:每次交易数量。
# context.day:用来获取前一交易日的时间和最新交易日的时间，第一位是最新交易日，第二位是前一交易日。当二者不同时，意味着新的一天，需要初始化其他变量。
# context.ending：开始回转信号，0表示未触发；1表示已触发。
# context.turnaround：当日买卖股票操作记录，也是回转记录。第一位代表买入股数，第二位代表卖出股数。
# 第二步：计算MACD指标，设计交易信号
# 当 MACD 小于 0 时，买入对应股票100手；
# 当 MACD 大于 0 时，卖出对应股票100手;
# 信号方向	数量	交易记录	剩余可回转的数量	总仓位
# 买	100	    [100,0] 	500	        600
# 卖	100	    [100,100]	400	        500
# 卖	100	    [100,200]	300	        400
# 卖	100     [100,300]	200	        300
# 卖	100	    [100,400]	100	        200

# 做市商交易策略：做市商制度是一种报价驱动制度。做市商根据自己的判断，不断地报出买入报价和卖出报价，以自有资金与投资者进行交易。
# 做市商获取的收益就是买入价和卖出价的价差。
# 第一步：订阅tick数据（只有最近3个月数据）
# 第二步：获取tick数据中的卖一和买一价格。
# 第三步：以买一价格开多，以卖一价格开空。以卖一价格平多，以买一价格平空。


# 海龟交易策略：海龟交易系统是一个完整的、机械的交易思想，可以系统地完成整个交易过程。它包括了买卖什么、头寸规模、何时买卖、
# 何时退出等一系列交易策略，是一个趋势交易策略。它最显著的特点是捕捉中长期趋势，力求在短期内获得最大的收益。
# 第一步：获取历史数据，计算唐奇安通道和ATR
# 第二步：当突破唐奇安通道时，开仓。
# 第三步：计算加仓和止损信号。


# 行业轮动策略：行业轮动策略是根据行业轮动现象做成的策略，利用行业趋势进行获利的方法，属于主动交易策略。其本质是通过一段时期的市场表现，
# 力求抓住表现较好的行业以及投资品种，选择不同时期的强势行业进行获利。
# 原因1：行业周期
# 行业的成长周期可以分为初创期、成长期、成熟期和衰退期，一般行业会按照这个周期运行。初创期属于行业刚刚起步阶段，风险高、收益小。
# 成长期内风险高、收益高。处于成熟期的企业风险低、收益高。处于衰退期的企业风险低、收益低。
# 在一段时间内，不同的行业会处于不同的行业周期，在时间维度上看会呈现行业轮动现象。
# 原因2：国家政策
# 国家政策对我国资本市场有重大影响。我国每年的财政政策和货币政策都是市场关注的热点，货币政策和财政政策会释放出影响市场的信息，
# 如利率。当政策释放出下调利率的信号，就为资金需求量大、项目周期长的行业缓解了压力，如房地产行业，这时对于这类行业利好，相应的股价就会上涨。
# 原因3：重大事件
# 资本市场对于消息的反应是迅速的。根据有效市场理论，在半强式有效市场下，一切已公开的信息都会反映在股价当中。
# 以疫情为例，消息一出迅速拉动医疗行业股价水平，带动行业增长。
# 行业轮动下资产配置
# 1. 美林时钟：大类资产配置
# 根据经济增长和通货膨胀可以将经济分为四个周期：衰退、复苏、过热、滞涨。
# 美林时钟分析了四个不同时期，并总结出适合投资的资产类别。
# 周期阶段	经济增长	通货膨胀	最优资产类别	最优股票板块
# 衰退	下降	下降	债券	防御成长
# 复苏	上升	下降	股票	周期成长
# 过热	上升	上升	商品	周期价值
# 滞涨	下降	上升	现金	防御价值
# 研究宏观经济时主要关注两个变量：GDP和CPI。
# 其中GDP选择不变价（剔除通货膨胀的影响），关心同比值差分后的符号。如果同比值>0，差分后仍然>0，说明GDP在加速上涨；
# 如果同比值<0,差分后仍然<0，说明GDP在加速下跌。
# 当经济增长速度加快时，与国家经济联系紧密的行业如钢铁、煤炭、电力等基建利润也会随之增长。
# 当经济增速放缓是，非周期性的行业如医药、基础消费品、基础建设等行业呈现较强的防御性。
# 当通货膨胀处于较低水平时，市场利率水平也处于较低水平。按照股票估值理论，此时的折现率处于低水平，价格相对而言较高。
# 此时，金融行业的股价会呈现明显的上涨。
# 当通货膨胀处于较高水平时，市场利率较高，此时现金为王，原材料价格走高。与此相关的原材料行业就会表现较好，如天然气、石油等。
# 策略示例采用第一种策略构建方法，利用行业动量设计策略。为了提高策略速度，以6个行业为例进行演示。
# 第一步：确定行业指数，获取行业指数收益率。
# 第二步：根据行业动量获取最佳行业指数。
# 第三步：在最佳行业中，选择最大市值的5支股票买入。


# 机器学习交易：在利用支持向量机进行预测之前，先将数据集分为训练集和测试集。
# SVM模型指出，如果超平面能够将训练样本没有错误地分开，并且两类训练样本中离超平面最近的样本与超平面之间的距离是最大的，
# 则把这个超平面称作最优超平面，即上图中的B平面。两类样本中距离最优超平面的点成为支持向量，支持向量机模型的名字由此得出。
# 在利用支持向量机预测时，还有很重要的一步是进行参数优化。SVM的参数包括以下几个。
# 参数符号	参数说明
# C	罚函数，错误项的惩罚系数，默认为1。C越大，对错误样本的惩罚力度越大，准确度越高但泛化能力越低（泛化能力是指拓展到测试集中的准确率）。
# C越小，允许样本增加一点错误，使泛化能力提高。
# Kernel	核函数，包括linear(线型核函数)、poly(多项式核函数)、rbf(高斯核函数)、sigmod(sigmod核函数)。
# degree	当核函数选成多项式核函数时对应的阶数。
# Gamma	核函数系数。
# 常用的分类方法是将数据及进行8:2分解，0.8部分是训练集，0.2部分是测试集。用训练集训练模型，再用测试集评价模型的准确率等指标。
# 第一步：获取原始数据，这里获取2016-04-01到2017-07-30的数据。
# 第二步：计算SVM模型的输入变量。
# x 表示输入的特征值，共7个，分别为：
# 参数符号	计算方法
# x1	最新收盘价/15日收盘价均值
# x2	现量/15日均量
# x3	最新最高价/15日均价
# x4	最新最低价/15日均价
# x5	现量
# x6	15日区间收益率
# x7	15日区间标准差
# y 表示5个交易日后收盘价是否上涨，
# 参数符号	含义
# y = 1	表示股价上涨
# y = 0	表示股价下跌
# 第三步：利用训练好的模型预测股价未来走向。若上涨(y=1)则开仓。
# 第四步：设置止损止盈点。
# 若已经持有仓位则在盈利大于10%的时候止盈，在星期五损失大于2%的时候止损。


'''

FOF策略
2fof策略：60%股票、40%债券。
rick ferri推荐：
vanguard总债券市场etf = bnd
全球股票etf = vt


taylor larimore策略：
42%美股、18国际股、40%债券
先锋股票市场指数基金 = VTSMX
vanguard国际股票指数基金 = VGTSX
先锋债券市场指数基金 = VBTLX

伯恩斯坦博士 no-brainer策略：
25%的美国股票 = VFINX - vanguard 500 index
25%的美国小盘股 = NAESX - vanguard small-cap index
25%的国际股票 = VGTSX - International stock index
25%的债券 = VBMFX - vanguard total bodn market index


'''

'''
巴菲特-芒格策略：
“价格公道的好公司” 的四条关键点
1. 可以理解的业务
2. 稳定的收入与收益
3. 无重大长期债务
4. 极具吸引力的股价
如何按巴菲特-芒格策略投资
1. 选择市值最大的25支股票
2. 把要投入的资金以同等的比重（4%）投入每个股票
3. 任何时候开始都可以，每年年初更新一次

神奇公式”： 从所有非公用事业或金融服务公司中，选择资本回报率与收益率综合排名最高的公司。
乔尔·格林布拉特的往期业绩证明了神奇公式选出的股可以得到极高的长期回报。
神奇公式策略参考的两个重要指标
1. 收益率
乔尔·格林布拉特收益率 ％ = 息税前利润 / 企业价值 * 100
2. 资本回报率
乔尔·格林布拉特资本回报率 ％ = 息税前利润 / （固定资产、无形资产和其他长期资产净额 + 净营业资金）*100
神奇公式用资本回报率参数来保证只选择高质量的公司，用收益率来保证只选择估值合理的公司。
用这两个指标分别对公司进行排名后，整体排名最高的公司就是最好的投资选择。但这种方法不适合公共事业或金融服务公司，所以这个策略对行业进行了限制。

彼得·林奇策略
1. 市盈率 < 15
彼得·林奇在《彼得·林奇的成功投资》一书中指出：
“判断股票是高估还是低估，需要将股价线与收益线进行比较。”
彼得·林奇把每股收益的15倍当作收益线：股票的标准股价/每股收益 （即市盈率）= 15。
2. 可预测性评级 > 两颗星
彼得·林奇认为“周期型公司在行业扩展时期，收益可能会比非扩展期高出许多，造成较低市盈率的假象；而非周期型公司的收益相对周期型公司可能更稳定一些。”
*较低的可预测性评级说明公司的历史收益不稳定，市场低迷时也可能具有较低的回报。
3. 10年扣非每股收益增长率
彼得·林奇在《彼得·林奇的成功投资》书中列出了六类公司，其中的稳定增长型公司的利润增长率为10%至12%之间。
点击查看彼得·林奇列出的六类公司详解。
4. 债务股本比率
低债务股本比率说明公司的资产健康，可以长期持续经营。彼得·林奇指出，债务股本比率对于困境反转型公司尤为重要。


格雷厄姆特价股票
1. 股票价格低于公司当期的净流动资产价值 NCAV
2. 在过去的12个月中，产生了正经营现金流的公司
3. 与现金相比，该公司没有明显的债务。
*股价／净净营运资本 NNWC在100％到300％之间的公司，以及过去12个月中产生负经营现金流的公司也会展示在结果中，以提供更多的投资选择。
根据格雷厄姆的观点，一旦经济形势恶化，这些公司中的一些成员很可能会变得资不抵债，所以持有一篮子这种公司的股票会最大化地分散投资风险。



低估可预测公司
如何计算股票的内在价值
价值大师在可预测性评级较高的公司里面，使用自由现金流折现模型和每股收益折现模型两种方法来计算出公司的内在价值，找出具有安全边际的股票。
内在价值默认假设
1. 在自由现金流折现模型下，我们使用每股自由现金流和10年每股自由现金流增长率作为默认值
2. 在每股收益折现模型下，我们使用扣非每股收益和10年扣非每股收益增长率 ％作为默认值
3. 默认折现率为12％
4. 默认快速成长阶段为10年，该阶段假定增长率与过去10年的平均增长率相同；如果增长率高于20％，我们使用20％；如果增长率低于5％，我们使用5％
5. 在快速成长阶段结束后，默认永续增长阶段年数为10年，年增长率为4%
内在价值计算公式
内在价值 = 快速成长阶段价值 + 永续增长阶段价值
如何衡量公司是被高估还是低估（安全边际）
安全边际高于0的公司视为被低估。
*点击查看安全边际 ％：每股收益折现模型的详细解释。




'''

# 开发中策略模块：

# 有效金融市场，进行趋势交易策略

# 半有效金融市场，进行对冲交易策略

# 无效金融市场，进行套利交易策略


# 1。2、输入潜在可交易的金融产品的清单：
# 权益投资类：股票，美股，英股，港股，中股，其他
# 固定收益类：债券，国债，公司债
# 衍生品类：期权，期货，外汇
# 另类投资类：基金，贵金属，大宗商品
# 加密货币类：比特币，加密货币指数
# 1。3、根据金融产品清单，利用预留的算法交易策略回测结果。
# 1。4、根据第四阶段的评估结果，结合2+3的步骤结果输出可交易的金融产品清单。

# 2、Risk management
# 资金分配和管理编程设计思想

# 根据上一段的交易产品清单，判断接下来的交易合理的资金量，管理合理的资金。
# 2。1 凯利公式是：f*=(p*rW-q*rL)/（rLrW）。其中f*是最优下注比例,p是赢的概率,q是输的概率，rW是获胜后的净赢率，rL是净损失率。
# 2。2 根据凯利公式进行N轮次交易，假设在某种情况全部亏损的情况下，哪个资金的比例可以保证最后一次的胜利后，依然有足够的资金进行交易，
# 即可作为下注比例。
# 资金分配逻辑：假设交易产品的持有期=交易轮次，为N。假设交易产品的风险评级，为R。
# 假设总投资额一定的情况下 为I。
# 清单 持有期 风险评级 投资份额 百分化                              投资额         整数化
# 股票 7     1      =7*1    =7/（股票+债券+基金+期货的投资份额）    =I*百分化      =将投资额整数化
# 债券 7     2      =7*2
# 基金 7     3      =7*3
# 期货 2     5      =2*5


'''
portfoliovisualizer平台投资组合优化和回测结果。


'''

# 3、Algorithmic trading
# 模拟人工交易重复操作。

# 根据上一段的预测未来交易清单和资金分配，选择合适的时间，判断接下来的交易方向。
# 3。1 实际的金融市场清单：
# IB电子交易，TD电子交易，Trading212电子交易，富途牛牛电子交易，国金证券电子交易，coinbase电子交易，pionex交易机器人
# 3。2 开市交易时间：A+港（02：15- 07：15）、欧洲（08：30 - 16：00）、 美国（14：15 - 21：00）
# 3。3 设定盈利预期和回撤预期


# 4、Strategy evaluation
# 模拟下一个交易日的行情，在模拟假设的环境中，将今日的策略进行模拟，进行预测和判断，
# 原有的交易策略是否继续有效？
# 根据上一段的实际交易结果，对比预测第二个交易日的模拟预测算法交易交易的结果进行评估。
# 如果评估良好，则继续交易，持续运用已知的交易策略。
# 如果评估不良好，则提示需要调整操作。将需要调整的操作建议，返回给第一阶段的量化分析，形成策略判断储存在 开发中的策略 模块。

# 线上人工模拟交易平台自我学习。重点关注数据值（从宏观到微观），熟练掌握目标产品的交易规则。
# 人工交易平台评审： CFA交易知识，输出与CFA教科书知识点的相似度的结果。


# 获取数据平台：tradingeconomics平台，东方财富、同花顺，和讯金融数据，新浪财经数据

'''
在模拟平台尝试操作：
trading212
btc-alpha
cmc markets
plus500
tradingview

一是先行指标。这类指标可以对未来的经济运行状况提供预示性的信息。从实践来看，这类预测一般比实际经济运行提前半年左右。
二是同步指标。这类指标主要反映国民经济运行目前的状态，并不预示将来的变动。同步指标主要包括失业率、国民生产总值等。
三是滞后指标。这类指标所反映的国民经济运行的转折点，一般要比实际经济活动晚半年左右。滞后指标主要有银行短期商业贷款利率、工商业未还贷款等。
事实上在经济活动指标体系中包括了上面提到的通货膨胀指标，金融指标和经济增长指标等。

pest模型、波特五力模型、商业模型画布，
从宏观到行业到公司拆解得出结果。
根据结果与机构持仓结果对比。对比纬度：数据+规则 如下：
数据，对比我的选择和机构选择不同和相同？
规则，对比我的多和空，买和卖的不同和相同？

如果与机构相同，则买。
如果与机构不相同，则少买。



新浪财经查看机构持仓，将交易结果对比机构持仓，同时对比全部数据值。
东方财富、同花顺，价值大师平台，查看机构持仓。
网易财经查看A股历史交易数据，将交易结果对比历史回测。
novelinvestor平台数据，将交易数据对比目前资产类别回报率


'''

# 数据：

# 宏观经济数据：

'''金融市场：
货币汇率，汇率对资本市场是反向关系，针对不同对行业板块影响作用不同。涨易进，跌易出。

十年政府债券，美国十年期国债收益率是全球市场利率之母，其余皆为利差关系。
主要利差包括：期限利差，反映时间的价值；信用利差，反映信用风险溢价；国别利差，反映国别风险溢价。
十年期美债收益率是一个综合性指标，反映市场对以美国为代表的经济基本面、未来通胀和风险偏好或期限溢价的预期，
其变动将对全球金融市场和资产配置产生重大影响。
短期美债收益率快速回升，基本面快速改善是主要驱动力；长期看，通胀预期是关键因子。
政府债券可以提供稳定、可靠的收益现金流，所以其波动性基本小于股票。整体而言，债券价格与股价走势呈相反趋势。
在多元化的资产配置组合中，政府债券的主要作用并非是拉动组合回报，更多是担当“减震器”的角色。

股市指数，综合反映一定时期内某一证券市场上股票价格的变动方向和变动程度。
指数让投资者能够评估证券、主动型管理基金、投资组合相对于市场的表现。
无论是大型机构投资者、财务顾问或个人投资者，均以指数为基准评估他们的投资，厘定是跑赢或跑输他们所投资的市场。
广泛市场指数：sp500
行业指数：软件行业指数
策略和主题指数：一带一路指数
固定收益指数：债券市场
商品指数：个别商品指数

'''

''' 
国内生产总值：

 经济活动指数：

 国内生产总值：国内生产总值（Gross Domestic Product）是指在一定时期内（一个季度或一年），
 一个国家或地区的经济中所生产出的全部最终产品和劳务的价值，常被公认为衡量国家经济状况的最佳指标。 
 它不但可反映一个国家的经济表现，更可以反映一国的国力与财富。
 计算方式：gdp= 总消费+总投资+政府购买+净出口

 国内生产总值年增长率:


  不变价国内生产总值
 从农业GDP
 从国内生产总值建设
 从制造业的GDP
 从GDP的服务
 从GDP运输
 国内生产总值增长率
 人均国内生产总值
 人均国内生产总值 (以购买力平价计算)
 固定资本形成总额
 国民生产总值 '''

'''劳动力
就业人数
劳力成本
最低工资
人口
男性退休年龄
女性退休年龄
失业人员
失业率
工资
制造业工资'''

'''价格
居民消费价格指数CPI
核心消费者物价指数
核心通胀率
出口价格
食品通胀
国内生产总值平减指数
进口价格
通货膨胀率
通货膨胀率（每月）
生产者价格
生产者价格指数变化'''

'''健康
冠状病毒病例
冠状病毒死亡
冠状病毒恢复
冠状病毒疫苗接种率
冠状病毒疫苗总数'''

'''金融
银行资产负债表
存款准备金率
央行资产负债表
存款利率
固定资产投资
外汇储备
银行间同业拆借利率
利率
贷款利率
Liquidity Injections Via Reverse Repo
贷款增长
银行贷款
私营部门贷款
货币供应量M0
货币供应量M1
货币供应量M2
反向回购利率'''

'''贸易
贸易差额
资本流动
原油产量
经常账户
经常账户占GDP比例
出口
外债
外国直接投资
黄金储备
进口
贸易条款
恐怖主义指数
旅游收入
入境旅游人数
武器销售'''

'''政府
信用评级
财政支出
政府预算
政府预算值
政府债务占国内生产总值比重
政府收入
政府支出
假期
军费'''

'''商业
商业信心指数
产能利用率
汽车生产
车辆注册
水泥生产
库存变化
竞争力指数
竞争力排名
综合采购经理人指数
企业利润
腐败指数
腐败排名
营商环境
电力生产
工业生产
工业生产（月）
互联网速度
IP地址
制造业PMI
制造业生产
矿业生产
新订单指数
非制造业PMI
服务业PMI
钢铁生产
汽车总销量'''

'''消费
银行贷款利率
消费者信心指数
消费信贷
消费支出
个人可支配收入
汽油价格
家庭债务占国内生产总值
家庭债务与收入
零售销售（月率环比)
零售销售（年率同比)'''

'''住房
住房指数
新屋销售'''

'''税种
企业所得税税率
个人所得税
销售税率
社会保障覆盖率
企业社会保障覆盖率
员工社会保障覆盖率'''

# 规则：
'''
开盘前：
集合竞价：
开盘前15分钟，优先顺序是 价>量>时 挂单顺序

9：15-20 预先撮合，不成交。以预先成交量最大的价位显示，可申报，可撤销。
9点20分至9点25分，可申报不可撤销，9点25分之前都不成交，依然是预先撮合，以预先成交量最大的价位显示，但是因为不能撤销的，因此价格有点真实了。
9.25-9.30休息，不成交，可申报不可撤销，9.30开盘后才能撤销。
集合竞价卖出股票后，资金在9：25后就可用，买进另一只股票。
尾盘14.57分开始，以最近成交价为价格，不再显示十档价位，进入尾盘竞价，可申报，不可撤销，
尾盘竞价变动一般不大，3点00分0s，根据成交量最大的价位，给出收盘价，一天的交易结束。
成交规则
价格优先，时间优先，撮合规则。
买东西，自然是价高者得，价格相同，先出价的得。
卖东西，自然是价低的先卖出，价格一样，先卖的先成交。
如果你非常想买，你挂涨停价买，那么会从22.6，22.61一路成交上去，把这些价位上的单都吃掉，才会到涨停价，而不会直接以涨停价成交，
因此盘中遇到突发利好，或者拉直线时，打板时，直接挂涨停买！不会亏的。如果你只挂高几分钱的价格，输价格的瞬间，价格就上去了。踏空了。

如果你非常想卖，挂跌停卖，会从22.59,22.58依次成交下去，把这些价位上的单都吃掉，才会到跌停，
因此如果盘中突发利空，跌直线时，挂跌停卖，不会亏的。如果你只挂低几分钱的价格，输价格的瞬间，价格就下去了。套牢了。

K线是滞后的，每3秒一个得到一个交易价格，这3秒里会成交很多笔交易，实际中却只取最后1秒成交量最大的价格作为K线，
所以你别想着能通过K线分析断线走势，如果真能分析的出来，早就被机器人替代了

内盘和外盘：
内盘外盘是股市术语之一。 ... 内盘是指主动卖出成交的数量，即卖方主动以低于或等于当前买一、买二、买三等价格下单卖出股票时成交的数量，用绿色显示。 
内盘的多少显示了空方急于卖出的数量大小。 外盘是指以主动买入成交的数量，
即买方主动以高于或等于当前卖一、卖二、卖三等价格下单买入股票时成交的数量，用红色显示。


'''

# 5、Window display
# 5。1 将实际交易的结果，可视化展示。








































